{"ast":null,"code":"import _slicedToArray from \"/Users/macbook/Desktop/rock/Rock_App/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbook/Desktop/rock/Rock_App/src/components/albumList/AlbumList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport uniqid from \"uniqid\";\nimport { debounce } from \"lodash\";\nimport { albumSearch, fetchAlbums, loadMoreAlbums } from \"../../redux/actions\";\nimport AlbumListItem from \"./albumListItem/AlbumListItem\";\nimport \"./album_list.scss\";\n\nconst AlbumList = ({\n  albums,\n  status,\n  albumSearch,\n  currentArtist,\n  errorMessage,\n  fetchAlbums,\n  pageNum,\n  loadMoreAlbums,\n  filtredAlbums,\n  searchedVal\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        inputVal = _useState2[0],\n        setInputVal = _useState2[1];\n\n  const handleSearch = debounce(inputVal => {\n    setInputVal(inputVal);\n    loadMoreAlbums(inputVal);\n    albumSearch(inputVal, albums);\n  }, 1000);\n  const albumsToShow = searchedVal.length > 0 ? filtredAlbums : albums;\n  const debouncedFetchAlbums = debounce(() => {\n    fetchAlbums(currentArtist, pageNum);\n  }, 1000);\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight && searchedVal === \"\") {\n        debouncedFetchAlbums();\n      }\n    };\n\n    window.addEventListener(\"scroll\", onScroll, false);\n    return () => window.removeEventListener(\"scroll\", onScroll, false); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentArtist, pageNum, searchedVal, albums]);\n  return React.createElement(\"div\", {\n    className: \"album-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"album-wrapper__input\",\n    type: \"text\",\n    placeholder: \"search for the album\",\n    onChange: e => handleSearch(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"artist-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, status === \"success\" || status === \"pending\" ? albumsToShow.map(album => React.createElement(AlbumListItem, {\n    name: album.name,\n    img: album.image[2][\"#text\"],\n    key: uniqid(),\n    songs: album.tracks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })) : status = \"failure\" && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, errorMessage)));\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    albumSearch: bindActionCreators(albumSearch, dispatch),\n    fetchAlbums: bindActionCreators(fetchAlbums, dispatch),\n    loadMoreAlbums: bindActionCreators(loadMoreAlbums, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumList);","map":{"version":3,"sources":["/Users/macbook/Desktop/rock/Rock_App/src/components/albumList/AlbumList.js"],"names":["React","useEffect","useState","connect","bindActionCreators","uniqid","debounce","albumSearch","fetchAlbums","loadMoreAlbums","AlbumListItem","AlbumList","albums","status","currentArtist","errorMessage","pageNum","filtredAlbums","searchedVal","inputVal","setInputVal","handleSearch","albumsToShow","length","debouncedFetchAlbums","onScroll","window","innerHeight","scrollY","document","body","offsetHeight","addEventListener","removeEventListener","e","target","value","map","album","name","image","tracks","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport uniqid from \"uniqid\";\nimport { debounce } from \"lodash\";\n\nimport { albumSearch, fetchAlbums, loadMoreAlbums } from \"../../redux/actions\";\nimport AlbumListItem from \"./albumListItem/AlbumListItem\";\n\nimport \"./album_list.scss\";\n\nconst AlbumList = ({\n  albums,\n  status,\n  albumSearch,\n  currentArtist,\n  errorMessage,\n  fetchAlbums,\n  pageNum,\n  loadMoreAlbums,\n  filtredAlbums,\n  searchedVal\n}) => {\n  const [inputVal, setInputVal] = useState(\"\");\n\n  const handleSearch = debounce(inputVal => {\n    setInputVal(inputVal);\n    loadMoreAlbums(inputVal);\n    albumSearch(inputVal, albums);\n  }, 1000);\n\n  const albumsToShow = searchedVal.length > 0 ? filtredAlbums : albums;\n\n  const debouncedFetchAlbums = debounce(() => {\n    fetchAlbums(currentArtist, pageNum);\n  }, 1000);\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (\n        window.innerHeight + window.scrollY >= document.body.offsetHeight &&\n        searchedVal === \"\"\n      ) {\n        debouncedFetchAlbums();\n      }\n    };\n    window.addEventListener(\"scroll\", onScroll, false);\n    return () => window.removeEventListener(\"scroll\", onScroll, false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentArtist, pageNum, searchedVal, albums]);\n\n  return (\n    <div className=\"album-wrapper\">\n      <input\n        className=\"album-wrapper__input\"\n        type=\"text\"\n        placeholder=\"search for the album\"\n        onChange={e => handleSearch(e.target.value)}\n      />\n      <div className=\"artist-list\">\n        {status === \"success\" || status === \"pending\"\n          ? albumsToShow.map(album => (\n              <AlbumListItem\n                name={album.name}\n                img={album.image[2][\"#text\"]}\n                key={uniqid()}\n                songs={album.tracks}\n              />\n            ))\n          : (status = \"failure\" && <p>{errorMessage}</p>)}\n      </div>\n    </div>\n  );\n};\nconst mapStateToProps = state => {\n  return state;\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    albumSearch: bindActionCreators(albumSearch, dispatch),\n    fetchAlbums: bindActionCreators(fetchAlbums, dispatch),\n    loadMoreAlbums: bindActionCreators(loadMoreAlbums, dispatch)\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumList);\n"]},"metadata":{},"sourceType":"module"}