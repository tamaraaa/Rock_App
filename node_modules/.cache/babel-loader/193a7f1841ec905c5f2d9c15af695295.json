{"ast":null,"code":"import _defineProperty from \"/Users/macbook/Desktop/rock/Rock_App/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { actionTypes } from \"./constants\";\nconst initialState = {\n  artists: [],\n  status: \"\",\n  errorMessage: \"\",\n  albums: [],\n  currentArtist: \"\",\n  filtredAlbums: [],\n  pageNum: 1,\n  searchedVal: \"\"\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === actionTypes.FETCH_ARTISTS_FULFILLED) {\n    return _objectSpread({}, state, {\n      artists: action.payload,\n      status: \"success\",\n      errorMessage: \"\"\n    });\n  }\n\n  if (action.type === actionTypes.SET_SEARCH_VAL) {\n    return _objectSpread({}, state, {\n      searchedVal: action.payload\n    });\n  }\n\n  if (action.type === actionTypes.FATCH_ARTISTS) {\n    return _objectSpread({}, state, {\n      status: \"pending\"\n    });\n  }\n\n  if (action.type === actionTypes.SET_STATUS) {\n    return _objectSpread({}, state, {\n      status: action.payload\n    });\n  }\n\n  if (action.type === actionTypes.FETCH_ARTISTS_ERROR) {\n    return _objectSpread({}, state, {\n      status: \"failure\",\n      errorMessage: action.payload,\n      albums: []\n    });\n  }\n\n  if (action.type === actionTypes.FETCH_ALBUMS) {\n    return _objectSpread({}, state, {\n      status: \"pending\"\n    });\n  }\n\n  if (action.type === actionTypes.FETCH_ALBUMS_FULFILLED) {\n    return _objectSpread({}, state, {\n      albums: [...state.albums, ...action.payload[0]],\n      status: \"success\",\n      errorMessage: \"\",\n      currentArtist: action.payload[1],\n      pageNum: state.pageNum + 1\n    });\n  }\n\n  if (action.type === actionTypes.ALBUM_SEARCH) {\n    return _objectSpread({}, state, {\n      filtredAlbums: [...action.payload],\n      errorMessage: action.payload.length === 0 ? \"Album not found..\" : \"\",\n      status: action.payload.length === 0 ? \"failure\" : \"success\"\n    });\n  }\n\n  if (action.type === actionTypes.FETCH_ALBUMS_ERROR) {\n    return _objectSpread({}, state, {\n      status: \"failure\",\n      errorMessage: action.payload\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/macbook/Desktop/rock/Rock_App/src/redux/reducer.js"],"names":["actionTypes","initialState","artists","status","errorMessage","albums","currentArtist","filtredAlbums","pageNum","searchedVal","rootReducer","state","action","type","FETCH_ARTISTS_FULFILLED","payload","SET_SEARCH_VAL","FATCH_ARTISTS","SET_STATUS","FETCH_ARTISTS_ERROR","FETCH_ALBUMS","FETCH_ALBUMS_FULFILLED","ALBUM_SEARCH","length","FETCH_ALBUMS_ERROR"],"mappings":"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","sourcesContent":["import { actionTypes } from \"./constants\";\nconst initialState = {\n  artists: [],\n  status: \"\",\n  errorMessage: \"\",\n  albums: [],\n  currentArtist: \"\",\n  filtredAlbums: [],\n  pageNum: 1,\n  searchedVal: \"\"\n};\n\nfunction rootReducer(state = initialState, action) {\n  if (action.type === actionTypes.FETCH_ARTISTS_FULFILLED) {\n    return {\n      ...state,\n      artists: action.payload,\n      status: \"success\",\n      errorMessage: \"\"\n    };\n  }\n  if (action.type === actionTypes.SET_SEARCH_VAL) {\n    return {\n      ...state,\n      searchedVal: action.payload\n    };\n  }\n\n  if (action.type === actionTypes.FATCH_ARTISTS) {\n    return {\n      ...state,\n      status: \"pending\"\n    };\n  }\n  if (action.type === actionTypes.SET_STATUS) {\n    return {\n      ...state,\n      status: action.payload\n    };\n  }\n\n  if (action.type === actionTypes.FETCH_ARTISTS_ERROR) {\n    return {\n      ...state,\n      status: \"failure\",\n      errorMessage: action.payload,\n      albums: []\n    };\n  }\n  if (action.type === actionTypes.FETCH_ALBUMS) {\n    return {\n      ...state,\n      status: \"pending\"\n    };\n  }\n  if (action.type === actionTypes.FETCH_ALBUMS_FULFILLED) {\n    return {\n      ...state,\n      albums: [...state.albums, ...action.payload[0]],\n      status: \"success\",\n      errorMessage: \"\",\n      currentArtist: action.payload[1],\n      pageNum: state.pageNum + 1\n    };\n  }\n  if (action.type === actionTypes.ALBUM_SEARCH) {\n    return {\n      ...state,\n      filtredAlbums: [...action.payload],\n      errorMessage: action.payload.length === 0 ? \"Album not found..\" : \"\",\n      status: action.payload.length === 0 ? \"failure\" : \"success\"\n    };\n  }\n  if (action.type === actionTypes.FETCH_ALBUMS_ERROR) {\n    return {\n      ...state,\n      status: \"failure\",\n      errorMessage: action.payload\n    };\n  }\n  return state;\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}