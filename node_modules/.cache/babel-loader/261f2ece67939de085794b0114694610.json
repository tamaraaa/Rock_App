{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/rock/Rock_App/src/components/artistList/ArtistList.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport uniqid from \"uniqid\";\nimport ArtistListItem from \"./artistListItem/AtristListItem\";\nimport Headline from \"./headline/Headline\";\nimport { fetchData, fetchAlbums } from \"../../redux/actions\";\nimport \"./artist_list.scss\";\n\nconst ArtistList = ({\n  artists,\n  getArtists,\n  status,\n  getAlbums,\n  setShowArtist,\n  pageNum\n}) => {\n  useEffect(() => {\n    getArtists();\n  }, [getArtists]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Headline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"artist-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, status === \"success\" && artists.map(artist => React.createElement(ArtistListItem, {\n    setShowArtist: setShowArtist,\n    artist: artist,\n    pageNum: pageNum,\n    key: uniqid(),\n    fetchAlbums: getAlbums,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getArtists: bindActionCreators(fetchData, dispatch),\n    getAlbums: bindActionCreators(fetchAlbums, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArtistList);","map":{"version":3,"sources":["/Users/macbook/Desktop/rock/Rock_App/src/components/artistList/ArtistList.js"],"names":["React","useEffect","connect","bindActionCreators","uniqid","ArtistListItem","Headline","fetchData","fetchAlbums","ArtistList","artists","getArtists","status","getAlbums","setShowArtist","pageNum","map","artist","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,qBAAvC;AACA,OAAO,oBAAP;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,OADkB;AAElBC,EAAAA,UAFkB;AAGlBC,EAAAA,MAHkB;AAIlBC,EAAAA,SAJkB;AAKlBC,EAAAA,aALkB;AAMlBC,EAAAA;AANkB,CAAD,KAOb;AACJd,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,KAAK,SAAX,IACCF,OAAO,CAACM,GAAR,CAAYC,MAAM,IAChB,oBAAC,cAAD;AACE,IAAA,aAAa,EAAEH,aADjB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,OAAO,EAAEF,OAHX;AAIE,IAAA,GAAG,EAAEX,MAAM,EAJb;AAKE,IAAA,WAAW,EAAES,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CAFF,CADF;AAiBD,CA7BD;;AA+BA,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAOA,KAAP;AACD,CAFD;;AAGA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLV,IAAAA,UAAU,EAAER,kBAAkB,CAACI,SAAD,EAAYc,QAAZ,CADzB;AAELR,IAAAA,SAAS,EAAEV,kBAAkB,CAACK,WAAD,EAAca,QAAd;AAFxB,GAAP;AAID,CALD;;AAMA,eAAenB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CX,UAA7C,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport uniqid from \"uniqid\";\n\nimport ArtistListItem from \"./artistListItem/AtristListItem\";\nimport Headline from \"./headline/Headline\";\n\nimport { fetchData, fetchAlbums } from \"../../redux/actions\";\nimport \"./artist_list.scss\";\n\nconst ArtistList = ({\n  artists,\n  getArtists,\n  status,\n  getAlbums,\n  setShowArtist,\n  pageNum\n}) => {\n  useEffect(() => {\n    getArtists();\n  }, [getArtists]);\n\n  return (\n    <React.Fragment>\n      <Headline />\n      <div className=\"artist-list\">\n        {status === \"success\" &&\n          artists.map(artist => (\n            <ArtistListItem\n              setShowArtist={setShowArtist}\n              artist={artist}\n              pageNum={pageNum}\n              key={uniqid()}\n              fetchAlbums={getAlbums}\n            />\n          ))}\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getArtists: bindActionCreators(fetchData, dispatch),\n    getAlbums: bindActionCreators(fetchAlbums, dispatch)\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ArtistList);\n"]},"metadata":{},"sourceType":"module"}